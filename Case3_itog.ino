//============–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫============\|
#include "WiFi.h"
#include <SPI.h>
#include <MFRC522.h>
#include <FastBot.h>
#include <GyverMAX7219.h>
#include <RunningGFX.h>
//===============================================\|


//============–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π============\|
String white = "4130444819142129"; 
String white2 = "42412546319042129";
String br = "42252486319042129";
String br2 = "4239524819142129";
String red = "4206624819142129";
String red2 = "41322376319042129";
//==========================================\|


//============–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã===========\|
#define CS 15 //–ü–∏–Ω cs –Ω–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ
#define DATA 4 //–ü–∏–Ω data(din) –Ω–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ
#define CLK 2 //–ü–∏–Ω clk –Ω–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ
#define RST_PIN  22  // –ü–∏–Ω RST RC522
#define SS_PIN   5  // –ü–∏–Ω SDA (SS) RC522

#define ssid "" // –ò–º—è wifi —Å–µ—Ç–∏
#define password "" //–ü–∞—Ä–æ–ª—å wifi —Å–µ—Ç–∏
#define bot_token "" //–¢–æ–∫–µ–Ω —Ç–≥ –±–æ—Ç–∞ 

#define WIDTH 2 //–ö–æ–ª–∏—á–µ–≤—Å—Ç–≤–æ –º–∞—Ç—Ä–∏—Ü –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
#define HEIGHT 1 //–ö–æ–ª–∏—á–µ–≤—Å—Ç–≤–æ –º–∞—Ç—Ä–∏—Ü –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
#define run_speed 15 // —Å–∫–æ—Ä–æ—Å—Ç—å –±–µ–≥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
#define BRIGHT 4 //–Ø—Ä–∫–æ—Å—Ç—å –º–∞—Ç—Ä–∏—Ü–∏
//=========================================\|
//ApoX51s42wR7FDK8



//============–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–æ–≤============\|
MFRC522 rfid(SS_PIN, RST_PIN);
MAX7219 < WIDTH, HEIGHT, CS, DATA , CLK > mtrx; 
//========================================\|

//============–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è============\|
FastBot bot(bot_token); //–ü–æ–¥–ª—é—á–µ–Ω–∏–µ –∫ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—É 
RunningGFX run(&mtrx); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü–∏
//=====================================\|

//============–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –º–∞—Å—Å–∏–≤–æ–≤============\|
bool flag [6] = {0, 0, 0, 0, 0, 0};
int color[3] = {0, 0, 0};
String str = "–ü—Ä–∏–≤–µ—Ç";
String bal_str = "0";
String color_balans;
String chatID;
int bal = 0;
//=========================================================\|


void setup() {

  Serial.begin(115200); //–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞ –ø–æ—Ä—Ç–∞ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ 115200

//========================–ú–∞—Ç—Ä–∏—Ü–∞========================\|
  run.setSpeed(run_speed);
  mtrx.begin(); //–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ç—Ä–∏—Ü—ã 
  mtrx.setBright(BRIGHT);  // —è—Ä–∫–æ—Å—Ç—å 0..15
  mtrx.clear();
  run.setText(str);
  run.start();
//========================================================\|

//============–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è============\|
  SPI.begin();      //–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∏–Ω—ã SPI
  rfid.PCD_Init();  //–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RfID —á—Å–∏—Ç—ã–≤–∞—Ç–µ–ª—è
//=====================================\|

  wifi(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WiFi
  bot.attach(newMsg) ; //–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–≥ –±–æ—Ç–∞ 
}
//==============================================\|


void loop() {
//============–¢–∏–∫–∞–µ–º –≤ –ª—É–ø============\|
  run.tick();
  bot.tick();   
//====================================\|

  RfId(); //–í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç–æ–∫ 
} 

void newMsg(FB_msg& msg) {
  chatID = msg.userID; // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 

//============–û—Ç–ª–∞–¥–∫–∞============\|
  Serial.print(msg.username);
  Serial.print(", ");
  Serial.println(msg.text);
  Serial.print(", ");
  Serial.print(msg.userID);
//===============================\|

//====================================–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π====================================\|
if (msg.text == "/start") {
    bot.showMenu("–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å \n –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ \n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç", msg.userID);
  }

else if (msg.text == "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞") {
    bot.sendMessage("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω\n /bal - –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å \n /start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (–ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n /coins - –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ–≤—Å—Ç–≤–æ –º–æ–Ω–µ—Ç", msg.userID);
  }

else if (msg.text == "–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å" || msg.text =="/bal") {
    bot.sendMessage("–ë–∞–ª–ª–∞–Ω—Å: " + bal_str + "üí≤", msg.userID);
  }

else if (msg.text == "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç" || msg.text == "/coins") {
    int count =  color[0] + color[1] + color[2];
    color_balans =  "–í—Å–µ–≥–æ –º–æ–Ω–µ—Ç: " + String(count) + "\n"+  
                    "–ú–æ–Ω–µ—Ç—ã –≤ –Ω–∞–ª–∏—á–∏–∏:" + "\n" +
                    "‚ö™–ë–µ–ª—ã—Ö: " + String(color[0]) + "\n" +
                    "üî¥–ö—Ä–∞—Å–Ω—ã—Ö: " + String(color[2]) + "\n" +
                    "üèª–ë–µ–∂–µ–≤—ã–π: " + String(color[1]) + "\n";

    bot.sendMessage(color_balans, msg.userID);
  }

else { 
    bot.sendMessage("‚ùå–û—à–∏–±–∫–∞. –¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç \n"
                      "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n"
                      "/bal - –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å \n" 
                      "/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (–ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n"
                      "/coins - –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ–≤—Å—Ç–≤–æ –º–æ–Ω–µ—Ç",
                      msg.userID);
  }
}

//===========================================================================================\|

//====================================–û–±—Ä–∞–±–æ—Ç–∫–∞–±–∞–ª–∞–Ω—Å–∞ —Å–µ–π—Ñ–∞ ====================================\|
void bal1(int index, int nominal, int clr) {

Serial.println(" ");
Serial.println(nominal);
  if (flag[index] == 0) {
        
        bal += nominal;
        color[clr]++;
        bal_str = String(bal);
        flag[index] = 1;
        delay(1000);
        bot.sendMessage("üí∏–ü–æ–ø–æ–ª–Ω–µ–Ω–æ: +" + String(nominal) + "üí≤\n"+ //–í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –Ω–∞—á–µ—Å–ª–µ–Ω–∏–∏ –¥–µ–Ω–µ–≥
                        "–ë–∞–ª–∞–Ω—Å: " + bal_str + "üí≤", chatID);
    }
  else if (flag[index] == 1) {
    bal -= nominal;
    color[clr]--;
    bal_str = String(bal);
    flag[index] = 0;
    delay(1000);
    bot.sendMessage("üí∏–°–Ω—è—Ç–æ: -" + String(nominal) + "üí≤\n" + //–í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥
                    "–ë–∞–ª–∞–Ω—Å: " + bal_str + "üí≤", chatID);
  }
    Serial.println();
    mtrx.clear();
    mtrx.setCursor(0, 0);
    Serial.println(" ");
    Serial.println(str);
    mtrx.update();
    str = String(bal) + "_$ ";
}
//===============================================================================================\|

void RfId () {
     if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {
      String cur_str; 
      for (uint8_t i = 0; i < rfid.uid.size; i++) {
        cur_str += rfid.uid.uidByte[i]; 
        Serial.print(" ");
      }
//========================–û—Ç–ª–∞–¥–∫–∞======================\|
        Serial.println(" ");
        Serial.println("===================");
        Serial.println(cur_str);
//=====================================================\|

//====================================–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–æ–Ω–µ—Ç—ã –≤ –±–∞–∑–µ====================================\|

       if (cur_str == white) {
         Serial.print("OK"); 
         bal1(0, 100,0);
       }

      else if (cur_str == white2) {
        Serial.print("OK"); 
         bal1(1, 100,0);
       }

      else if(cur_str == br){
         Serial.print("OK"); 
         bal1(2, 50, 1);
       }

      else if (cur_str == br2) {
         Serial.print("OK"); 
         bal1(3, 50,1);
       }

      else if(cur_str == red){
         Serial.print("OK"); 
         bal1(4, 10,2);
       }

      else if (cur_str == red2) {
         Serial.print("OK"); 
         bal1(5, 10,2);
       }
      
      
       else {
        Serial.print("ERR");
       }
//=========================================================================================================\|     
   }
}
//========================–§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ wifi========================\|
void wifi() {
  delay(2000);
  Serial.begin(115200);
  Serial.println();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    if (millis() > 15000) ESP.restart();
  }
  Serial.println("Connected");
  Serial.println(WiFi.localIP());
}
//==========================================================================\|